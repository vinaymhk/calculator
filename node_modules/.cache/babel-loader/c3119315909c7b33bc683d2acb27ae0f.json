{"ast":null,"code":"import _slicedToArray from \"D:\\\\Local Disk E\\\\ReactJS Learning\\\\ReactJS\\\\calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Local Disk E\\\\ReactJS Learning\\\\ReactJS\\\\calculator\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css.css\";\nexport default function App() {\n  var _useState = useState(\"+\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      operator = _useState2[0],\n      setOperator = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      operand1 = _useState4[0],\n      setOperand1 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      operand2 = _useState6[0],\n      setOperand2 = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      result = _useState8[0],\n      setResult = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      operationsCount = _useState10[0],\n      setOperationsCount = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showResult = _useState12[0],\n      setShowResult = _useState12[1];\n\n  var handleOperatorClick = e => {\n    setOperator(e.target.dataset.operator);\n    setOperationsCount(operationsCount + 1);\n    setShowResult(true);\n\n    if (e.target.dataset.operator === \"+\") {\n      setResult(operand1 + operand2);\n    } else if (e.target.dataset.operator === \"-\") {\n      setResult(operand1 - operand2);\n    } else if (e.target.dataset.operator === \"*\") {\n      setResult(operand1 * operand2);\n    } else if (e.target.dataset.operator === \"/\") {\n      setResult(operand1 / operand2);\n    }\n  };\n\n  var handleReset = () => {\n    setOperand1(\"\");\n    setOperand2(\"\");\n    setShowResult(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operations-count\",\n    \"data-testid\": \"total-operations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Total operations performed: \", operationsCount), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expresstion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"app-input1\",\n    type: \"number\",\n    value: operand1,\n    required: true,\n    onChange: e => setOperand1(Number(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"operator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, operator), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"app-input2\",\n    type: \"number\",\n    value: operand2,\n    required: true,\n    onChange: e => setOperand2(Number(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operation\",\n    role: \"button\",\n    \"data-operator\": \"+\",\n    onClick: handleOperatorClick,\n    \"data-testid\": \"addButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operation\",\n    role: \"button\",\n    \"data-operator\": \"-\",\n    onClick: handleOperatorClick,\n    \"data-testid\": \"subtractButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operation\",\n    role: \"button\",\n    \"data-operator\": \"*\",\n    onClick: handleOperatorClick,\n    \"data-testid\": \"multiplyButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"*\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operation\",\n    role: \"button\",\n    \"data-operator\": \"/\",\n    onClick: handleOperatorClick,\n    \"data-testid\": \"divideButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset\",\n    role: \"button\",\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Reset\"), showResult && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result\",\n    \"data-testid\": \"result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Result: \", result)))));\n}","map":{"version":3,"sources":["D:/Local Disk E/ReactJS Learning/ReactJS/calculator/src/App.js"],"names":["React","useState","useEffect","App","operator","setOperator","operand1","setOperand1","operand2","setOperand2","result","setResult","operationsCount","setOperationsCount","showResult","setShowResult","handleOperatorClick","e","target","dataset","handleReset","Number","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css.css\";\n\nexport default function App() {\n  const [operator, setOperator] = useState(\"+\");\n  const [operand1, setOperand1] = useState(\"\");\n  const [operand2, setOperand2] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [operationsCount, setOperationsCount] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const handleOperatorClick = (e) => {\n    setOperator(e.target.dataset.operator);\n    setOperationsCount(operationsCount + 1);\n    setShowResult(true);\n    if (e.target.dataset.operator === \"+\") {\n      setResult(operand1 + operand2);\n    } else if (e.target.dataset.operator === \"-\") {\n      setResult(operand1 - operand2);\n    } else if (e.target.dataset.operator === \"*\") {\n      setResult(operand1 * operand2);\n    } else if (e.target.dataset.operator === \"/\") {\n      setResult(operand1 / operand2);\n    }\n  };\n  const handleReset = () => {\n    setOperand1(\"\");\n    setOperand2(\"\");\n    setShowResult(false);\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"operations-count\" data-testid=\"total-operations\">\n        Total operations performed: {operationsCount}\n      </div>\n      <div className=\"app\">\n        <form>\n          <div className=\"expresstion\">\n            <input\n              data-testid=\"app-input1\"\n              type=\"number\"\n              value={operand1}\n              required\n              onChange={(e) => setOperand1(Number(e.target.value))}\n            />\n            <span className=\"operator\">{operator}</span>\n            <input\n              data-testid=\"app-input2\"\n              type=\"number\"\n              value={operand2}\n              required\n              onChange={(e) => setOperand2(Number(e.target.value))}\n            />\n          </div>\n          <div className=\"operations\">\n            <div\n              className=\"operation\"\n              role=\"button\"\n              data-operator=\"+\"\n              onClick={handleOperatorClick}\n              data-testid=\"addButton\"\n            >\n              +\n            </div>\n            <div\n              className=\"operation\"\n              role=\"button\"\n              data-operator=\"-\"\n              onClick={handleOperatorClick}\n              data-testid=\"subtractButton\"\n            >\n              -\n            </div>\n            <div\n              className=\"operation\"\n              role=\"button\"\n              data-operator=\"*\"\n              onClick={handleOperatorClick}\n              data-testid=\"multiplyButton\"\n            >\n              *\n            </div>\n            <div\n              className=\"operation\"\n              role=\"button\"\n              data-operator=\"/\"\n              onClick={handleOperatorClick}\n              data-testid=\"divideButton\"\n            >\n              /\n            </div>\n          </div>\n\n          <div className=\"result-container\">\n            <div className=\"reset\" role=\"button\" onClick={handleReset}>\n              Reset\n            </div>\n            {showResult && (\n              <div className=\"result\" data-testid=\"result\">\n                Result: {result}\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}